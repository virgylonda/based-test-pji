<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pji.cbt.mapper.TestUserMapper">
	<resultMap type="pji.cbt.entities.User" id="resultUser">
		<id property="userId" column="id"/>
		<result property="username" column="username"/>
		<result property="password" column="password"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<association property="roles" column="role_id" resultMap="resultRoles" />
	</resultMap>
	
	<resultMap type="pji.cbt.entities.Roles" id="resultRoles">
		<id property="roleId" column="id"/>
		<result property="roleName" column="name"/>
		<result property="description" column="description"/>
	</resultMap>
	
	<resultMap type="pji.cbt.entities.TestUser" id="resultTestUser">
		<id property="testId" column="testId"/>
		<result property="started" column="started"/>
		<result property="ended" column="ended"/>
		<result property="status" column="status"/>
		<result property="score" column="score"/>
		<association property="users" column="user_id"  resultMap="resultUser" />
		<association property="categories" column="category_id" resultMap="resultCategory" />
	</resultMap>
	
	<resultMap type="pji.cbt.entities.Category" id="resultCategory">
		<id property="idCategory" column="id"/>
		<result property="questionCategory" column="question_category"/>
		<result property="description" column="description"/>
		<result property="questionType" column="question_type"/>
		<result property="timeLimit" column="time_limit"/>
	</resultMap>

	<select id="findTestByUserId" resultMap="resultTestUser">
 		SELECT t.id AS testId, t.user_id, t.category_id, t.started, t.ended, t.score, c.question_category, c.description, u.name, u.username, u.email
  		FROM tb_user_test t, tb_user u, tb_question_category c 
  		WHERE t.category_id = c.id and t.user_id = u.id and user_id = #{user.userId}
 	</select>

	<select id="findUserSummaryScore" resultMap="resultTestUser">
		SELECT u.id, u.name AS name, u.email AS email , MIN(t.started) AS started, MAX(t.ended) AS ended, ROUND(AVG(t.score),2) AS score FROM tb_user_test t JOIN tb_user u ON t.user_id=u.id GROUP BY t.user_id, u.id, u.name, u.email
	</select>
	
	<select id="findTestAssignment" resultMap="resultTestUser">
		SELECT c.id, c.question_category, c.description, c.question_type, c.time_limit, t.id AS testId, t.status FROM tb_question_category c LEFT JOIN tb_user_test t ON c.id=t.category_id AND t.user_id = #{user.userId}
	</select>
	
	<select id="findTestHaveAssign" resultMap="resultTestUser">
		SELECT c.id, c.question_category, c.description, c.question_type, c.time_limit, t.id AS testId, t.status FROM tb_question_category c JOIN tb_user_test t ON c.id=t.category_id WHERE t.user_id = #{user.userId} ORDER BY t.id
	</select>
	
	<select id="findUserTestById" resultMap="resultTestUser">
		SELECT t.started, t.ended, t.score, t.status FROM tb_user_test t WHERE t.id = #{testId}
	</select>
	
	<delete id="deleteByIdUserAndIdCategory">
		DELETE FROM tb_user_test WHERE user_id = #{users.userId} AND category_id = #{categories.idCategory}
	</delete>
	
	<delete id="deleteByIdUserAndStatus">
		DELETE FROM tb_user_test WHERE user_id = #{userId} AND status = 'Not yet'
	</delete>
		
	<select id="saveTest" resultMap="resultTestUser">
		INSERT INTO tb_user_test(user_id,category_id) VALUES(#{users.userId},#{categories.idCategory})
	</select>
	
	<update id="updateStartTest">
		UPDATE tb_user_test SET started = #{started}, status = #{status} WHERE id = #{testId}
	</update>
	
	<update id="updateEndTest">
		UPDATE tb_user_test SET ended = #{ended}, score = #{score} WHERE id = #{testId}
	</update>
	
</mapper>